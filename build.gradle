plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'info.solidsoft.pitest' version '1.7.0'
	id 'jacoco'
}

group = 'com.aemendes'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.1")
	set('junit-jupiter.version', "5.5.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-jackson'

	implementation 'commons-codec:commons-codec'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.powermock:powermock-core:1.7.3'
	testImplementation 'org.powermock:powermock-module-junit4:1.7.3'
	testImplementation 'org.powermock:powermock-api-mockito2:1.7.3'

	testImplementation 'com.github.tomakehurst:wiremock:2.27.2'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	filter {
		excludeTestsMatching("**/CoinpaymentsApplication.*")
		excludeTestsMatching("**/*Properties.*")
		excludeTestsMatching("com.aemendes.coinpayments.model.*")
		excludeTestsMatching("com.aemendes.coinpayments.model.dto.*")
		excludeTestsMatching("com.aemendes.coinpayments.model.payload.*")
	}
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it, exclude: [
				"**/*CoinpaymentsApplication.*",
				"**/*Properties.*",
				"**/*model/*",
				"**/*dto/*",
				"**/*payload/*",
		])
	}))
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'PACKAGE'
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 1.0
			}
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 1.0
			}
		}
	}
	classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it, exclude: [
				"**/*CoinpaymentsApplication.*",
				"**/*Properties.*",
				"**/*model/*",
				"**/*dto/*",
				"**/*payload/*",
		])
	}))
}

pitest {
	junit5PluginVersion = '0.12'
	targetClasses = ['com.aemendes*']
	targetTests = ['com.aemendes*']
	pitestVersion = '1.4.7'
	excludedClasses = [
			'com.aemendes.coinpayments.model.*',
			'com.aemendes.coinpayments.model.dto.*',
			'com.aemendes.coinpayments.model.payload.*',
			'com.aemendes.coinpayments.configuration.*'
	]
	maxSurviving = 0
	mutationThreshold = 100
}